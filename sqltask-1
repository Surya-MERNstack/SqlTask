1. Movie should have multiple media(Video or Image) 

Ans:
(a)
CREATE TABLE Movies (
    movie_id INT PRIMARY KEY,
    title VARCHAR(255),
    release_date DATE
);


INSERT INTO Movies (movie_id, title, release_date) VALUES
(1, 'The Shawshank Redemption', '1994-10-14'),
(2, 'The Godfather', '1972-03-24'),
(3, 'Pulp Fiction', '1994-10-14');

SELECT * FROM Movies;

Output:

movie_id	title	                      release_date
    1	     The Shawshank Redemption	   1994-10-14
    2	     The Godfather	             1972-03-24
    3	     Pulp Fiction	               1994-10-14


(b)
Ans:
CREATE TABLE Media (
    media_id INT PRIMARY KEY,
    movie_id INT,
    media_type ENUM('Video', 'Image'),
    url VARCHAR(255),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)
);

INSERT INTO Media (media_id, movie_id, media_type, url) VALUES
(1, 1, 'Video', 'video1.mp4'),
(2, 1, 'Image', 'image1.jpg'),
(3, 2, 'Video', 'video2.mp4');

SELECT * FROM Media;

Output:

media_id	movie_id	media_type	 url
    1	       1	      Video	      https://video1.mp4
    2	       1	      Image	      image1.jpg
    3        2	      Video	      https://video2.mp4

3.Movie can belongs to multiple Genre

(a)
Ans:
CREATE TABLE Genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(255)
);

INSERT INTO Genres (genre_id, genre_name) VALUES
(1, 'Crime'),
(2, 'Drama'),
(3, 'Thriller');

SELECT * FROM Genres;

Output:
genre_id	genre_name
    1	      Crime
    2	      Drama
    3	      Thriller


(b)
Ans:CREATE TABLE MovieGenres (
    movie_id INT,
    genre_id INT,
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (genre_id) REFERENCES Genres(genre_id)
);

INSERT INTO MovieGenres (movie_id, genre_id) VALUES
(1, 1),
(1, 2),
(3, 1),
(3, 2),
(3, 3);
SELECT * FROM MovieGenres;

Output:
movie_id	genre_id
    1	       1
    1        2
    3	       1
    3 	     2
    3	       3

5.  Movie can have multiple reviews and Review can belongs to a user ?

(a)
Ans:
CREATE TABLE Users (
    user_id INT PRIMARY KEY,
    username VARCHAR(255)
);

INSERT INTO Users (user_id, username) VALUES
(1, 'john_doe'),
(2, 'jane_smith');

Output:
user_id	 username
   1	    john_doe
   2	    jane_smith


(b)
Ans:
CREATE TABLE Reviews (
    review_id INT PRIMARY KEY,
    movie_id INT,
    user_id INT,
    review_text VARCHAR(1000),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

INSERT INTO Reviews (review_id, movie_id, user_id, review_text) VALUES
(1, 1, 1, 'This movie is amazing!'),
(2, 1, 2, 'One of the best movies I have ever seen.');

Output:
review_id	movie_id	user_id	  review_text
 1	        1	          1	     This movie is amazing!
 2	        1	          2	     One of the best movies I have ever seen.


7. Artist can have multiple skills ?

(a)
Ans:
CREATE TABLE Artists (
    artist_id INT PRIMARY KEY,
    artist_name VARCHAR(255)
);

INSERT INTO Artists (artist_id, artist_name) VALUES
(1, 'Tom Hanks'),
(2, 'Morgan Freeman'),
(3, 'Marlon Brando');

Output:
artist_id	 artist_name
    1	      Tom Hanks
    2     	Morgan Freeman
    3     	Marlon Brando


8.
(a)
Ans:
CREATE TABLE Skills (
    skill_id INT PRIMARY KEY,
    skill_name VARCHAR(255)
);

INSERT INTO Skills (skill_id, skill_name) VALUES
(1, 'Actor'),
(2, 'Director'),
(3, 'Producer');

Output:
skill_id	skill_name
   1	     Actor
   2	     Director
   3	     Producer


9. Artist can perform multiple role in a single film ?
Ans:
(a)
CREATE TABLE ArtistSkills (
    artist_id INT,
    skill_id INT,
    FOREIGN KEY (artist_id) REFERENCES Artists(artist_id),
    FOREIGN KEY (skill_id) REFERENCES Skills(skill_id)
);

INSERT INTO ArtistSkills (artist_id, skill_id) VALUES
(1, 1),
(1, 2),
(2, 1),
(3, 1),
(3, 2),
(3, 3);

Output:
artist_id	skill_id
   1	       1
   1	       2
   2	       1
   3	       1
   3	       2
   3	       3

(b)
Ans:
CREATE TABLE MovieArtists (
    movie_id INT,
    artist_id INT,
    role VARCHAR(255),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (artist_id) REFERENCES Artists(artist_id)
);

INSERT INTO MovieArtists (movie_id, artist_id, role) VALUES
(1, 1, 'Actor'),
(1, 2, 'Actor'),
(2, 3, 'Actor');

output:
movie_id	artist_id	 role
   1	        1 	   Actor
   1	        2	     Actor
   2	        3      Actor
